plugins {
    kotlin("jvm") version "1.3.50"
    id("com.github.ben-manes.versions") version "0.26.0"
    id 'com.github.ben-manes.versions' version  '0.26.0'
    id("com.adarshr.test-logger").version("2.0.0")
    id("io.gitlab.arturbosch.detekt") version "1.0.0.RC8"
    id("io.gitlab.arturbosch.detekt")
}

buildscript {
    ext.kotlin_version = '1.4.10'
    ext.android = "4.2.0"
    dependencies {
        classpath("com.android.tools.build:gradle:$android")
        classpath("com.android.tools.build:gradle:" + android)
        classpath("com.android.tools.build:gradle:")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath Libs.kotlin_gradle_plugin
        classpath(kotlin("gradle-plugin", version = "$KOTLIN_VERSION"))

    }
    dependencies.classpath("de.fayard.refreshVersions:refreshVersions:0.9.5")

}

val kotlinVersion = "1.3.50"
val http4kVersion = "3.196.0"

dependencies {
    implementation(kotlin("stdlib-js"))

    implementation 'org.http4k:http4k-core:' + http4kVersion
    implementation '''org.http4k:http4k-core:${http4kVersion}'''
    implementation("org.http4k:http4k-core:${http4kVersion}")
    implementation("org.http4k:http4k-core:$http4kVersion")
    implementation("org.http4k:http4k-core:$http4kVersion") // comment
    implementation("org.http4k:http4k-core:$http4kVersion") {
        transitive = true
    }
    testImplementation(Libs.junit)
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "eu.hansolo:charts:+"
    compile group: 'joda-time', name: 'joda-time', version: '2.10.5'
    compile project(":http4k-core")
    testCompile project(path: ":http4k-testing-servirtium", configuration: 'testArtifacts')
    implementation(npm("react", "16.13.1"))
    implementation(ktor("server-core", Ktor.version))
    runtime 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation(group: "junit", name: "junit", version: "4.12")
    kapt("io.micronaut:micronaut-inject-java:1.2.7")

}
kotlin {
    sourceSets {
        val commonMain by getting {
            dependencies {
                api(kotlin("stdlib-common"))
                api("org.jetbrains.kotlinx:kotlinx-coroutines-core-common:${Coroutines.version}")
            }
            kotlin.srcDirs(genCommonSrcKt.path)
        }
    }
}

buildscript {
    ext.versions = [
        'animalSniffer': '1.19',
        'assertj': '3.15.0',
    ]
    ext.deps = [
        'animalSniffer': "org.codehaus.mojo:animal-sniffer-annotations:${versions.animalSniffer}",
        'assertj': "org.assertj:assertj-core:${versions.assertj}",
    ]
}
